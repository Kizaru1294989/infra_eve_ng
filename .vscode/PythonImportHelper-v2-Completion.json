[
    {
        "label": "paramiko",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "paramiko",
        "description": "paramiko",
        "detail": "paramiko",
        "documentation": {}
    },
    {
        "label": "SSHClient",
        "importPath": "paramiko",
        "description": "paramiko",
        "isExtraImport": true,
        "detail": "paramiko",
        "documentation": {}
    },
    {
        "label": "SSHClient",
        "importPath": "paramiko",
        "description": "paramiko",
        "isExtraImport": true,
        "detail": "paramiko",
        "documentation": {}
    },
    {
        "label": "SCPClient",
        "importPath": "scp",
        "description": "scp",
        "isExtraImport": true,
        "detail": "scp",
        "documentation": {}
    },
    {
        "label": "SCPClient",
        "importPath": "scp",
        "description": "scp",
        "isExtraImport": true,
        "detail": "scp",
        "documentation": {}
    },
    {
        "label": "logging",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "logging",
        "description": "logging",
        "detail": "logging",
        "documentation": {}
    },
    {
        "label": "os",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "os",
        "description": "os",
        "detail": "os",
        "documentation": {}
    },
    {
        "label": "subprocess",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "subprocess",
        "description": "subprocess",
        "detail": "subprocess",
        "documentation": {}
    },
    {
        "label": "ssh_scp_files",
        "kind": 2,
        "importPath": "Ansible.Backbone.backone",
        "description": "Ansible.Backbone.backone",
        "peekOfCode": "def ssh_scp_files(ssh_host, ssh_user, ssh_password, source_volume, destination_volume):\n    logging.info(\"In ssh_scp_files() method, copying files to the server\")\n    ssh = SSHClient()\n    ssh.set_missing_host_key_policy(paramiko.AutoAddPolicy())\n    ssh.connect(ssh_host, username=ssh_user, password=ssh_password, look_for_keys=False)\n    with SCPClient(ssh.get_transport()) as scp:\n        scp.put(source_volume, recursive=True, remote_path=destination_volume)\ndef execute_scp_command(password, user):\n    print(\"DC1\")\n    ssh_scp_files(\"10.43.192.112\", user, password, \"/home/rais/Arista_Nexus_Backbone/Conf-File/arista/1/conf.txt\", \"/home/cvpadmin/\")",
        "detail": "Ansible.Backbone.backone",
        "documentation": {}
    },
    {
        "label": "execute_scp_command",
        "kind": 2,
        "importPath": "Ansible.Backbone.backone",
        "description": "Ansible.Backbone.backone",
        "peekOfCode": "def execute_scp_command(password, user):\n    print(\"DC1\")\n    ssh_scp_files(\"10.43.192.112\", user, password, \"/home/rais/Arista_Nexus_Backbone/Conf-File/arista/1/conf.txt\", \"/home/cvpadmin/\")\n    print(\"DC2\")\n    ssh_scp_files(\"10.43.192.113\", user, password, \"/home/rais/Arista_Nexus_Backbone/Conf-File/arista/2/conf.txt\", \"/home/cvpadmin/\")\n    print(\"DC3\")\n    ssh_scp_files(\"10.43.192.114\", user, password, \"/home/rais/Arista_Nexus_Backbone/Conf-File/arista/3/conf.txt\", \"/home/cvpadmin/\")\n    print(\"DC4\")\n    ssh_scp_files(\"10.43.192.115\", user, password, \"/home/rais/Arista_Nexus_Backbone/Conf-File/arista/4/conf.txt\", \"/home/cvpadmin/\")\n    print(\"DC5\")",
        "detail": "Ansible.Backbone.backone",
        "documentation": {}
    },
    {
        "label": "run_ansible_playbook",
        "kind": 2,
        "importPath": "Ansible.Backbone.backone",
        "description": "Ansible.Backbone.backone",
        "peekOfCode": "def run_ansible_playbook(playbook_path):\n    os.chdir(os.path.dirname(playbook_path))\n    try:\n        subprocess.run([\"ansible-playbook\", os.path.basename(playbook_path)], check=True)\n    except subprocess.CalledProcessError as e:\n        return False\n    else:\n        return True\ndef main():\n    execute_scp_command(\"Exaprobe1234\" , \"cvpadmin\")",
        "detail": "Ansible.Backbone.backone",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": "Ansible.Backbone.backone",
        "description": "Ansible.Backbone.backone",
        "peekOfCode": "def main():\n    execute_scp_command(\"Exaprobe1234\" , \"cvpadmin\")\n    playbook = run_ansible_playbook(\"/home/rais/Arista_Nexus_Backbone/Ansible/Backbone/replace.yml\")\n    return playbook\nif __name__ == '__main__':\n    main()",
        "detail": "Ansible.Backbone.backone",
        "documentation": {}
    },
    {
        "label": "ssh_scp_files",
        "kind": 2,
        "importPath": "Ansible.fabric.fabric",
        "description": "Ansible.fabric.fabric",
        "peekOfCode": "def ssh_scp_files(ssh_host, ssh_user, ssh_password, source_volume, destination_volume, hostname):\n    \"\"\"\n    Copy files to the server using SCP and print the hostname being processed.\n    \"\"\"\n    print(f\"Copying files to {hostname} at {ssh_host}\")\n    logging.info(f\"In ssh_scp_files() method, copying files to the server: {hostname}\")\n    ssh = SSHClient()\n    ssh.set_missing_host_key_policy(paramiko.AutoAddPolicy())\n    ssh.connect(ssh_host, username=ssh_user, password=ssh_password, look_for_keys=False)\n    with SCPClient(ssh.get_transport()) as scp:",
        "detail": "Ansible.fabric.fabric",
        "documentation": {}
    },
    {
        "label": "border_leaf",
        "kind": 2,
        "importPath": "Ansible.fabric.fabric",
        "description": "Ansible.fabric.fabric",
        "peekOfCode": "def border_leaf(password, user):\n    ssh_scp_files(\"10.43.192.156\", user, password, \"/home/rais/Arista_Nexus_Backbone/Conf-File/Fabric-EVPN/leaf/Border/1/conf.txt\", \"/home/cvpadmin/\", \"LEAF-BORDER-1\")\n    ssh_scp_files(\"10.43.192.157\", user, password, \"/home/rais/Arista_Nexus_Backbone/Conf-File/Fabric-EVPN/leaf/Border/2/conf.txt\", \"/home/cvpadmin/\", \"LEAF-BORDER-2\")         \ndef leaf(password, user):\n    ssh_scp_files(\"10.43.192.156\", user, password, \"/home/rais/Arista_Nexus_Backbone/Conf-File/Fabric-EVPN/leaf/1/conf.txt\", \"/home/cvpadmin/\", \"LEAF-BORDER-1\")\n    ssh_scp_files(\"10.43.192.157\", user, password, \"/home/rais/Arista_Nexus_Backbone/Conf-File/Fabric-EVPN/leaf/2/conf.txt\", \"/home/cvpadmin/\", \"LEAF-BORDER-2\") \n    ssh_scp_files(\"10.43.192.160\", user, password, \"/home/rais/Arista_Nexus_Backbone/Conf-File/Fabric-EVPN/leaf/3/conf.txt\", \"/home/cvpadmin/\", \"LEAF-3\")\n    ssh_scp_files(\"10.43.192.161\", user, password, \"/home/rais/Arista_Nexus_Backbone/Conf-File/Fabric-EVPN/leaf/4/conf.txt\", \"/home/cvpadmin/\", \"LEAF-4\")\n    ssh_scp_files(\"10.43.192.162\", user, password, \"/home/rais/Arista_Nexus_Backbone/Conf-File/Fabric-EVPN/leaf/5/conf.txt\", \"/home/cvpadmin/\", \"LEAF-5\")\n    ssh_scp_files(\"10.43.192.163\", user, password, \"/home/rais/Arista_Nexus_Backbone/Conf-File/Fabric-EVPN/leaf/6/conf.txt\", \"/home/cvpadmin/\", \"LEAF-6\") ",
        "detail": "Ansible.fabric.fabric",
        "documentation": {}
    },
    {
        "label": "leaf",
        "kind": 2,
        "importPath": "Ansible.fabric.fabric",
        "description": "Ansible.fabric.fabric",
        "peekOfCode": "def leaf(password, user):\n    ssh_scp_files(\"10.43.192.156\", user, password, \"/home/rais/Arista_Nexus_Backbone/Conf-File/Fabric-EVPN/leaf/1/conf.txt\", \"/home/cvpadmin/\", \"LEAF-BORDER-1\")\n    ssh_scp_files(\"10.43.192.157\", user, password, \"/home/rais/Arista_Nexus_Backbone/Conf-File/Fabric-EVPN/leaf/2/conf.txt\", \"/home/cvpadmin/\", \"LEAF-BORDER-2\") \n    ssh_scp_files(\"10.43.192.160\", user, password, \"/home/rais/Arista_Nexus_Backbone/Conf-File/Fabric-EVPN/leaf/3/conf.txt\", \"/home/cvpadmin/\", \"LEAF-3\")\n    ssh_scp_files(\"10.43.192.161\", user, password, \"/home/rais/Arista_Nexus_Backbone/Conf-File/Fabric-EVPN/leaf/4/conf.txt\", \"/home/cvpadmin/\", \"LEAF-4\")\n    ssh_scp_files(\"10.43.192.162\", user, password, \"/home/rais/Arista_Nexus_Backbone/Conf-File/Fabric-EVPN/leaf/5/conf.txt\", \"/home/cvpadmin/\", \"LEAF-5\")\n    ssh_scp_files(\"10.43.192.163\", user, password, \"/home/rais/Arista_Nexus_Backbone/Conf-File/Fabric-EVPN/leaf/6/conf.txt\", \"/home/cvpadmin/\", \"LEAF-6\") \n    ssh_scp_files(\"10.43.192.164\", user, password, \"/home/rais/Arista_Nexus_Backbone/Conf-File/Fabric-EVPN/leaf/7/conf.txt\", \"/home/cvpadmin/\", \"LEAF-7\")\n    ssh_scp_files(\"10.43.192.165\", user, password, \"/home/rais/Arista_Nexus_Backbone/Conf-File/Fabric-EVPN/leaf/8/conf.txt\", \"/home/cvpadmin/\", \"LEAF-8\")  \ndef spine(password, user):",
        "detail": "Ansible.fabric.fabric",
        "documentation": {}
    },
    {
        "label": "spine",
        "kind": 2,
        "importPath": "Ansible.fabric.fabric",
        "description": "Ansible.fabric.fabric",
        "peekOfCode": "def spine(password, user):\n    ssh_scp_files(\"10.43.192.158\", user, password, \"/home/rais/Arista_Nexus_Backbone/Conf-File/Fabric-EVPN/spine/1/conf.txt\", \"/home/cvpadmin/\", \"SPINE-1\")\n    ssh_scp_files(\"10.43.192.159\", user, password, \"/home/rais/Arista_Nexus_Backbone/Conf-File/Fabric-EVPN/spine/2/conf.txt\", \"/home/cvpadmin/\", \"SPINE-2\") \ndef access(password, user):\n    ssh_scp_files(\"10.43.192.166\", user, password, \"/home/rais/Arista_Nexus_Backbone/Conf-File/Fabric-EVPN/Access/1/conf.txt\", \"/home/cvpadmin/\", \"ACCESS-1\") \n    ssh_scp_files(\"10.43.192.167\", user, password, \"/home/rais/Arista_Nexus_Backbone/Conf-File/Fabric-EVPN/Access/2/conf.txt\", \"/home/cvpadmin/\", \"ACCESS-2\")\n    ssh_scp_files(\"10.43.192.168\", user, password, \"/home/rais/Arista_Nexus_Backbone/Conf-File/Fabric-EVPN/Access/3/conf.txt\", \"/home/cvpadmin/\", \"ACCESS-3\")  \ndef execute_scp_command(password, user):\n    # border_leaf(password, user)\n    spine(password, user)",
        "detail": "Ansible.fabric.fabric",
        "documentation": {}
    },
    {
        "label": "access",
        "kind": 2,
        "importPath": "Ansible.fabric.fabric",
        "description": "Ansible.fabric.fabric",
        "peekOfCode": "def access(password, user):\n    ssh_scp_files(\"10.43.192.166\", user, password, \"/home/rais/Arista_Nexus_Backbone/Conf-File/Fabric-EVPN/Access/1/conf.txt\", \"/home/cvpadmin/\", \"ACCESS-1\") \n    ssh_scp_files(\"10.43.192.167\", user, password, \"/home/rais/Arista_Nexus_Backbone/Conf-File/Fabric-EVPN/Access/2/conf.txt\", \"/home/cvpadmin/\", \"ACCESS-2\")\n    ssh_scp_files(\"10.43.192.168\", user, password, \"/home/rais/Arista_Nexus_Backbone/Conf-File/Fabric-EVPN/Access/3/conf.txt\", \"/home/cvpadmin/\", \"ACCESS-3\")  \ndef execute_scp_command(password, user):\n    # border_leaf(password, user)\n    spine(password, user)\n    leaf(password, user)\n    # access(password, user)\ndef run_ansible_playbook(playbook_path):",
        "detail": "Ansible.fabric.fabric",
        "documentation": {}
    },
    {
        "label": "execute_scp_command",
        "kind": 2,
        "importPath": "Ansible.fabric.fabric",
        "description": "Ansible.fabric.fabric",
        "peekOfCode": "def execute_scp_command(password, user):\n    # border_leaf(password, user)\n    spine(password, user)\n    leaf(password, user)\n    # access(password, user)\ndef run_ansible_playbook(playbook_path):\n    os.chdir(os.path.dirname(playbook_path))\n    try:\n        subprocess.run([\"ansible-playbook\", os.path.basename(playbook_path)], check=True)\n    except subprocess.CalledProcessError as e:",
        "detail": "Ansible.fabric.fabric",
        "documentation": {}
    },
    {
        "label": "run_ansible_playbook",
        "kind": 2,
        "importPath": "Ansible.fabric.fabric",
        "description": "Ansible.fabric.fabric",
        "peekOfCode": "def run_ansible_playbook(playbook_path):\n    os.chdir(os.path.dirname(playbook_path))\n    try:\n        subprocess.run([\"ansible-playbook\", os.path.basename(playbook_path)], check=True)\n    except subprocess.CalledProcessError as e:\n        return False\n    else:\n        return True\ndef main():\n    execute_scp_command(\"Exaprobe1234\", \"cvpadmin\")",
        "detail": "Ansible.fabric.fabric",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": "Ansible.fabric.fabric",
        "description": "Ansible.fabric.fabric",
        "peekOfCode": "def main():\n    execute_scp_command(\"Exaprobe1234\", \"cvpadmin\")\n    playbook = run_ansible_playbook(\"/home/rais/Arista_Nexus_Backbone/Ansible/fabric/replace.yml\")\n    return playbook\nif __name__ == '__main__':\n    main()",
        "detail": "Ansible.fabric.fabric",
        "documentation": {}
    }
]